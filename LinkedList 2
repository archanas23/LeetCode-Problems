/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode curr=head;
        ListNode prev=null;
        ListNode fast=curr;
        ListNode slow=curr;
        while(fast!=null && fast.next!=null)
        {
            fast=fast.next.next;
            slow=slow.next;
            if(fast==slow)
            {
                ListNode slow1=head;
                while(slow!=slow1)
                {
                    slow=slow.next;
                    slow1=slow1.next;
                }
                return slow;
            }
        }
        return null;

    }
}
